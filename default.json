{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "labels": ["dependencies"],
  "extends": [
    ":enableVulnerabilityAlertsWithLabel(vulnerable)",
    "config:recommended",
    ":dependencyDashboard"
  ],
  "automergeSchedule": ["after 5am and before 5pm every weekday"],
  "separateMinorPatch": true,
  "platformAutomerge": true,
  "automergeType": "pr",
  "rebaseWhen": "auto",
  "packageRules": [
    {
      "description": "Automatically merge minor and patch-level updates",
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "automerge": true,
      "automergeType": "pr"
    },
    {
      "description": "Use custom regex versioning for bitnami images",
      "matchPackagePrefixes": ["gcr.io/bitnami-containers/", "bitnami/"],
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(:?-(?<compatibility>.*-r)(?<build>\\d+))?$"
    },
    {
      "description": "automerge digests via branch to reduce noise",
      "matchUpdateTypes": ["digest"],
      "automergeType": "branch"
    }
  ],
  "regexManagers": [
    {
      "description": "Update _VERSION variables in Dockerfiles",
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      "matchStrings": [
        "#\\s*renovate:(?:\\s*datasource=(?<datasource>[a-z-]+?))(?:\\s*depName=(?<depName>[\\S]+?))(?:\\s*(?:lookupName|packageName)=(?<packageName>[\\S]+?))?(?:\\s*versioning=(?<versioning>[^\\s]+?))?\\s*\\n(?:[^=]+=\\s*['\"]?(?<currentValue>[\\S]+?)['\"])\\s*\\n*",
        "# renovate: datasource=(?<datasource>[a-z-].*?) depName=(?<depName>.*?) versioning=(?<versioning>.*?)\\s?(ENV|ARG) .+?_VERSION=\"?(?<currentValue>.+?)\"?"
      ],
      "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^v?(?<version>.+)${{/if}}",
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "description": "Update image variables in YAML files",
      "fileMatch": ["\\.y[a]?ml$", "\\.y[a]?ml\\.tpl$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?\\s.+?_version: (?<currentValue>.+?)\\s",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?\\s.+?-version: (?<currentValue>.+?)\\s",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?\\simage: (?<currentValue>.+?)\\s",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?\\stag: (?<currentValue>.+?)\\s",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?) versioning=(?<versioning>.+?)\\s\\s*image: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?) versioning=(?<versioning>.+?)\\s\\s*tag: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?) \\s\\s*image: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>[^\\s]+) depName=(?<depName>[^\\s]+)\\s+-\\s+\"(?<currentValue>.*)\""
      ],
      "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^v?(?<version>.+)${{/if}}"
    },
    {
      "customType": "regex",
      "description": "Update version variables in YAML files",
      "fileMatch": ["\\.y[a]?ml$", "\\.y[a]?ml\\.tpl$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)\\s+(.*?):\\s?(?<currentValue>.+)",
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+)\\s+(.*?):\\s(\"|')(?<currentValue>.+)(\"|')"
      ],
      "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^v?(?<version>.+)${{/if}}",
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    }
  ]
}
